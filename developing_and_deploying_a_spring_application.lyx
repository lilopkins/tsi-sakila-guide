#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "Liberation Sans"
\font_sans "default" "Liberation Sans"
\font_typewriter "default" "Liberation Mono"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts true
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "Developing and Deploying a Spring Microservice"
\pdf_author "Lily Hopkins <lhopkins@softwareinstitute.com>"
\pdf_keywords "spring, java, microservice, azure, aws, docker"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen true
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref section
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Developing and Deploying a Spring Boot Microservice
\end_layout

\begin_layout Author
Lily Hopkins <lhopkins@softwareinstitute.com>
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Part
Development
\end_layout

\begin_layout Standard
This guide will assume you already have a local MySQL database configured
 with the 
\begin_inset CommandInset href
LatexCommand href
name "sakila data"
target "https://dev.mysql.com/doc/index-other.html"
literal "false"

\end_inset

 installed.
\end_layout

\begin_layout Section
Preparing the Project
\end_layout

\begin_layout Standard
To get started with a Spring Boot project, head to 
\begin_inset CommandInset href
LatexCommand href
name "start.spring.io"
target "https://start.spring.io"
literal "false"

\end_inset

.
 Make the following selections:
\end_layout

\begin_layout Itemize
Project: Maven
\end_layout

\begin_layout Itemize
Language: Java
\end_layout

\begin_layout Itemize
Spring Boot: 
\emph on
leave default option selected
\end_layout

\begin_layout Itemize
Project Metadata:
\end_layout

\begin_deeper
\begin_layout Itemize
Group: 
\emph on
enter a suitable value.
 Traditionally a URL-type of value is used and formatted backwards, e.g.
 com.softwareinstitute
\end_layout

\begin_layout Itemize
Artifact: 
\emph on
enter a suitable name, e.g.
 sakila
\end_layout

\begin_layout Itemize
Name: 
\emph on
enter a suitable name, e.g.
 sakila
\end_layout

\begin_layout Itemize
Description: 
\emph on
enter a suitable value, e.g.
 Sakila project for TSI
\end_layout

\begin_layout Itemize
Package name: 
\emph on
leave as presented
\end_layout

\begin_layout Itemize
Packaging: Jar
\end_layout

\begin_layout Itemize
Java: 17
\end_layout

\end_deeper
\begin_layout Standard
On the right hand side, click 
\emph on
Add Dependencies...
\emph default
.
 Add the following dependencies - they appear in the order listed:
\end_layout

\begin_layout Itemize
Lombok
\end_layout

\begin_layout Itemize
Spring Web
\end_layout

\begin_layout Itemize
Rest Repositories
\end_layout

\begin_layout Itemize
Spring Data JPA
\end_layout

\begin_layout Itemize
MySQL Driver
\end_layout

\begin_layout Standard
Then select 
\emph on
Generate
\emph default
.
 A zipped archive containing your project should download - extract this
 to a suitable location.
\end_layout

\begin_layout Section
Getting Started with git
\end_layout

\begin_layout Standard
In order to track the changes with our repository as we make them, it is
 beneficial to use git.
 First, we need to initialise a repository in our project directory.
 To do this, open up a terminal in this directory
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
During this project, we will open a terminal a number of times.
 On Windows, hold down Shift and right click in the folder.
 Select the option 
\emph on
'Open in Terminal'
\emph default
 (Windows 11) or 
\emph on
'Open in Command Prompt'
\emph default
 or 
\emph on
'Open in PowerShell'
\emph default
 (Windows 10).
 On *nix distros, you can generally right click and select 
\emph on
'Open in Terminal'
\emph default
, however this will depend on your desktop environment.
 On Mac, you need to open the Terminal application and navigate to the correct
 directory with the 
\emph on
cd
\emph default
 (change directory) command.
\end_layout

\end_inset

 and run the command 
\emph on
git init
\emph default
.
\end_layout

\begin_layout Standard
We now need to make our first commit with the initial project data.
 To do this, in the same terminal window, enter the commands:
\end_layout

\begin_layout Enumerate

\emph on
git add .
\end_layout

\begin_layout Enumerate

\emph on
git commit -m 
\begin_inset Quotes eld
\end_inset

initial commit
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
At some point, you should probably configure a remote for this git repository
 – this is left as an exercise for the reader.
\end_layout

\begin_layout Section
Understanding your Blank Project
\end_layout

\begin_layout Standard
Before we continue, it is worth understanding the structure of the blank
 project.
 You will notice some files and directories inside your project – the most
 important ones are explained below.
\end_layout

\begin_layout Paragraph

\emph on
src
\end_layout

\begin_layout Standard
The 
\emph on
src
\emph default
 directory contains all of the source code for your project.
 Inside it is split into 
\emph on
main
\emph default
 and 
\emph on
test
\emph default
, where 
\emph on
test
\emph default
 houses code for automated tests targeting your project, and 
\emph on
main
\emph default
 contains the actual project code.
 Within both of these directories is a 
\emph on
java
\emph default
 directory, which contains all of the Java code.
 There may also be a 
\emph on
resources
\emph default
 directory, which houses any files your project may read or use during it's
 execution.
\end_layout

\begin_layout Paragraph

\emph on
.gitignore
\end_layout

\begin_layout Standard
The 
\emph on
.gitignore
\emph default
 file specifies a list of files and directories for git to ignore, as in
 for it not to commit to your project repository.
 This saves it from getting cluttered and tracking files that are generated.
 It is good practice for your git repository to only track just enough to
 build your project, and for everything else to be ignored.
\end_layout

\begin_layout Paragraph

\emph on
mvnw
\emph default
 and 
\emph on
mvnw.cmd
\end_layout

\begin_layout Standard
These are wrappers for 
\emph on
mvn
\emph default
, the command to interact with Maven.
 This means that, without having Maven installed, you can still make use
 of it by running 
\emph on
./mvnw
\emph default
 (on *nix and Mac) or 
\emph on
./mvnw.cmd
\emph default
 (on Windows).
\end_layout

\begin_layout Paragraph

\emph on
pom.xml
\end_layout

\begin_layout Standard
The Project Object Model.
 This is a file for Maven to understand the structure of your project and
 how it should handle building your project into a functional web application.
\end_layout

\begin_layout Section
Writing your First Model and Repository
\end_layout

\begin_layout Section
Writing your First Controller
\end_layout

\begin_layout Section
DRY (Don't Repeat Yourself)
\end_layout

\begin_layout Paragraph
Important!
\end_layout

\begin_layout Standard
Before reading this section, you 
\emph on
must
\emph default
 understand everything that comes before it.
 This section will explain how to save considerable time and effort, but
 is only valuable to a develop who understands what it is doing.
\end_layout

\begin_layout Part
Deployment
\end_layout

\begin_layout Section
Deployment to Azure
\end_layout

\begin_layout Section
Deployment to AWS
\end_layout

\begin_layout Section
Deployment to Docker Container
\end_layout

\begin_layout Paragraph
Why?
\end_layout

\begin_layout Standard
By deploying to a Docker container, you open up the ability to host your
 microservice on any platform supporting container images.
 Azure and AWS both support Docker containers directly.
 You could also deploy to a Kubernetes cluster, which would allow scaling
 up to a huge size (think Google).
\end_layout

\end_body
\end_document
